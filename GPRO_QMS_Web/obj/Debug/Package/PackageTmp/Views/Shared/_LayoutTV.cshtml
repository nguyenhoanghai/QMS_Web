<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    <link href="~/Content/Materialize/materialize.min.css" rel="stylesheet" />
    <link href="~/Content/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link href="~/Content/QMS/HienThiQuay/HienThiQuay.css" rel="stylesheet" />

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Content/Materialize/materialize.min.js"></script>

    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Areas/Admin/Scripts/QMSCommon.js"></script>

    <link href="~/Content/Marquee/jquery.marquee.min.css" rel="stylesheet" />
    <script src="~/Content/Marquee/jquery.marquee.min.js"></script>
</head>
<body>
    <div id="fullscreen">
        <div class="full-box">
            <a id="request-full" class="btn btn-primary">
                <i class="fa fa-arrows-alt "></i>
            </a>
            <a class="btn btn-primary" onclick="fullScreenApi.cancelFullScreen(document.documentElement)" style="display:none">
                <i class="fa fa-compress "> </i>
            </a>
        </div> 
            @RenderBody()
        
    </div>

    <script>
        (function () {
            var
                fullScreenApi = {
                    supportsFullScreen: false,
                    nonNativeSupportsFullScreen: false,
                    isFullScreen: function () { return false; },
                    requestFullScreen: function () { },
                    cancelFullScreen: function () { },
                    fullScreenEventName: '',
                    prefix: ''
                },
                browserPrefixes = 'webkit moz o ms khtml'.split(' ');

            // check for native support
            if (typeof document.cancelFullScreen != 'undefined') {
                fullScreenApi.supportsFullScreen = true;
            } else {
                // check for fullscreen support by vendor prefix
                for (var i = 0, il = browserPrefixes.length; i < il; i++) {
                    fullScreenApi.prefix = browserPrefixes[i];

                    if (typeof document[fullScreenApi.prefix + 'CancelFullScreen'] != 'undefined') {
                        fullScreenApi.supportsFullScreen = true;
                        break;
                    }
                }
            }

            // update methods to do something useful
            if (fullScreenApi.supportsFullScreen) {
                fullScreenApi.fullScreenEventName = fullScreenApi.prefix + 'fullscreenchange';

                fullScreenApi.isFullScreen = function () {
                    switch (this.prefix) {
                        case '':
                            return document.fullScreen;
                        case 'webkit':
                            return document.webkitIsFullScreen;
                        default:
                            return document[this.prefix + 'FullScreen'];
                    }
                }
                fullScreenApi.requestFullScreen = function (el) {
                    return (this.prefix === '') ? el.requestFullScreen() : el[this.prefix + 'RequestFullScreen']();
                }
                fullScreenApi.cancelFullScreen = function (el) {
                    return (this.prefix === '') ? document.cancelFullScreen() : document[this.prefix + 'CancelFullScreen']();
                }
            }
            else if (typeof window.ActiveXObject !== "undefined") { // IE.
                fullScreenApi.nonNativeSupportsFullScreen = true;
                fullScreenApi.requestFullScreen = fullScreenApi.requestFullScreen = function (el) {
                    var wscript = new ActiveXObject("WScript.Shell");
                    if (wscript !== null) {
                        wscript.SendKeys("{F11}");
                    }
                }
                fullScreenApi.isFullScreen = function () {
                    return document.body.clientHeight == screen.height && document.body.clientWidth == screen.width;
                }
            }

            // jQuery plugin
            if (typeof jQuery != 'undefined') {
                jQuery.fn.requestFullScreen = function () {

                    return this.each(function () {
                        if (fullScreenApi.supportsFullScreen) {
                            fullScreenApi.requestFullScreen(this);
                        }
                    });
                };
            }

            // export api
            window.fullScreenApi = fullScreenApi;
        })();

        function check() {
            if (!fullScreenApi.isFullScreen()) {
                fullScreenApi.requestFullScreen(document.documentElement);
                $('.setting').hide();
                var video = document.getElementById("video");
                video.play();
            }
            else {
                fullScreenApi.cancelFullScreen(document.documentElement);
                $('.setting').show();
            }
        }

        $('#request-full').click(function () {
            check();
        });
    </script>
</body>
</html>
